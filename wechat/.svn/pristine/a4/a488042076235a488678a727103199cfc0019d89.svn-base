<template>
	<view class="container">
		<view class="problemItem">
			 帮助中心
		</view>
		<view>
			
			<view class="problemItem">
				<text class="cuIcon-title"></text>
				配送问题
			</view>

		</view>
		
		<!-- <view  v-for="(item,index) in questionList" :key="index">
			<view class="problemItem" @click="displayList(item)">
				<view class="">
					<text class="cuIcon-title lg title"></text>{{item.classifyName}}
				</view>
				<text :class="item.state==false?'cuIcon-unfold':'cuIcon-fold'"></text>
			</view>
			<view class="problemItem" v-if="item.state"  v-for="(content,index) in item.list" :key="index" @click="goAnswer(content.resultContent)">
				<view class="">
					{{index+1}}.{{content.problemContent}}
				</view>
			    <text class="cuIcon-right"></text>
			</view>
		</view> -->
		
		<view class="footer">
			<view class="online">
				<!-- <text class="cuIcon-weixin" style="font-size: 40rpx;"></text> -->
				<image style="width: 40rpx;height: 40rpx;" src="../../static/personal/service.png"></image>
				<text style="margin-left: 20rpx;">在线客服 07:00~22:00</text>
				<button open-type="contact" class="btn"></button>
			</view>
			<view class="telPhone" @click="call">
				<!-- <text class="cuIcon-dianhua" style="font-size: 40rpx;"></text> -->
				<image style="width: 40rpx;height: 40rpx;" src="../../static/personal/phone.png"></image>
				<text t style="margin-left: 20rpx;">电话客服 08:00~22:00</text>
			</view>
		</view>
	</view>
</template>

<script>
	import {
		mapState,
		mapMutations,
	} from 'vuex';
	import {
		problemTypeList,problemList
	}from '../../API/personArr';
	export default{
		data() {
			return {
				questionList:[],
		        //display:false,
				detailList:[]
			}
		},
		computed: {
			...mapState(['token']),
		},
		onLoad() {
			this.getproblemTypeList();
		},
		onShow() {
	
		},
		methods:{
			/* async getproblemTypeList() {
				uni.showLoading({
					title:'加载中'
				})
				const res = await problemTypeList();
				console.log(res);
				if(res)
				uni.hideLoading()
				res.data.map(item=>{
					item.state=false
				});
				this.questionList = res.data;
				}, */
		async displayList(item){
			item.state=!item.state
		},
		call(){
			uni.makePhoneCall({
				phoneNumber:'0258'
			})
		},
		goAnswer(result){
			console.log(result)
			uni.navigateTo({
				url:'../answer/answer?result='+result
			})
		}
			
		}
	}
</script>

<style lang="scss">
	.container{
		padding: 20rpx;
	}
	.problemItem{
		padding: 20rpx;
		border-bottom: 1px solid #eee;
		background-color: #fff;
		display: flex;
		justify-content: space-between;
	}
	.title{
		color: var(--button);
	}
	.footer{
		position: fixed;
		bottom: 0;
	    left: 0;
		width: 100%;
		height: 250rpx;
		background-color: #fff;
		.online{
			width: 500rpx;
			height: 80rpx;
			text-align: center;
			line-height: 80rpx;
			border-radius: 40rpx;
			color: #fff;
			// background-color: var(--button);
			background-color: #0A90FE;
			margin: 40rpx auto;
			position: relative;
			display: flex;
			align-items: center;
			justify-content: center;
			.btn{
				position: absolute;
				width: 100%;
				height: 100%;
				left: 0;
				top: 0;
				opacity: 0;
			}
		}
		.telPhone{
			text-align: center;
			align-items: center;
			display: flex;
			justify-content: center;
		}
	}
</style>
