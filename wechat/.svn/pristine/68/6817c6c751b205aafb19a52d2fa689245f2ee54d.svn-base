<template>
<view class="classification">
	<view class="search" @click="goSearch">
		<view class="searchcrux">
			<text class="cuIcon-search lg find"></text>
			<view class="searchinp"> 
			  当前请求失败,请检查您的网络状况
			</view>
		</view>
	</view>
	<view class="main">
		<view class="left">
			<view :class="select==index?'active':''"  v-for="(item,index) in content" :key='item.id' @click="leftClick(index,item.categoryName)">
				{{item.categoryName}}
				<view class="shu" v-if="select==index">
				</view>
			</view>
		</view>
		
		<scroll-view class="rightList" scroll-y @scrolltolower="more"  :scroll-top="scrollTop">
		<view class="list">
		<view class="right" v-for="(item,index) in goodsList" :key='item.id' >
			<view class="photo" @click="goDetail(item.id,item.orderCount)">
				<image :src="item.goodsSmallImage" mode=""></image>
				<!-- <image src="../../static/product/product.png" mode=""></image> -->
			</view>
			<view class="detail">
				<view class="name" style="font-size: 32rpx;">
					{{item.goodsName}}
				</view>
				<view class="price" style="font-size: 32rpx;color: red;">
					¥{{item.goodsSuggestedRetailPrice}}
				</view>
				<view class="button" style="text-align: center;">
					<view class="change">
						<view class="add" @click.stop="cartSub(index,item.id,item.orderCount)">
							<image src="../../static/mine/jian.png" mode=""></image>
						</view>
							<text>{{item.orderCount}}</text>
						<view class="sub" @click.stop="cartAdd(index,item.id,item.orderCount)">
							<image src="../../static/mine/jia.png" mode=""></image>
						</view>
					</view>
				</view>
			</view>
		</view>	
		</view>
		<view class="" style="text-align: center;" v-if="nomore">
			该品类下没有更多商品了
		</view>
		</scroll-view>
	</view>
		
</view>
</template>

<script>
	import {
		mapState,
		mapGetters,
		mapMutations,
		mapActions
	} from 'vuex';
	import {
		getClassifi,
		listByType,
		addNum,
		findGoods,
		totalNum
	} from '../../API/classificationArr/index';
	import {addCart} from '../../API/addCart/index.js'
	import {deleteShop} from '../../API/shopCart/index.js'
	export default{
		data(){
			return{
				//isRefresh:true,
				//contentIndex:0,
				select:0,
				// content:[],
				content:[{
					categoryName:'工商服务'
				},{
					categoryName:'代理记账'
				},{
					categoryName:'财务审计'
				},{
					categoryName:'工商服务'
				},{
					categoryName:'工商服务'
				},{
					categoryName:'工商服务'
				},],
				goodsList:[],
				value:'',
				pageIndex:1,
				pageSize:5,
				categoryName:'',
				nomore:false,
				scrollTop:0
			}
		},
		onLoad(){
			
		},
		computed: {
			...mapState(['token','classificationCur']),
		},
		onLoad() {
		
		},
		onShow(){
			console.log(123)
			console.log(this.classificationCur)
			this.getNum();
			console.log(getApp().globalData.index)
			if(getApp().globalData.index==2)
			return
			this.getLeftList()
		},
		methods:{
			async leftClick(index,categoryName){
				this.select=index;
				this.scrollTop= this.scrollTop+0.01
				this.pageIndex=1
				const res=await listByType(this.token,categoryName,this.pageIndex,this.pageSize);
				console.log(res);
				this.goodsList=res.data.list;
			},
			async cartAdd(index,id,num){
				if(!this.token){
					uni.showToast({
						title:'您还未登录',
						icon:'none'
					})
					return
				}
				this.goodsList[index].orderCount++;
				const res=await addNum(this.token,id,num+1);
				console.log(res);
				const curAll=await totalNum(this.token)
				let cartNum = curAll.sum;  //通过后台接口获取
				 if (cartNum != 0) {
				   //设置角标
				   uni.setTabBarBadge({
					 index: 3,  //tabBar序号，从0开始计数
					 text: cartNum.toString()
				   })
				 } else {
				   //移除角标
				   uni.removeTabBarBadge({
					 index: 3,
				   })
				 }
			},
			async	cartSub(index,id,num){
				if(!this.token){
					uni.showToast({
						title:'您还未登录',
						icon:'none'
					})
					return
				}
				if(num==0){
					const res=await deleteShop(this.token,id)
					uni.showToast({
						title:'不能再点了,亲!',
						icon:'none'
					})
					return
					//this.goodsList[index].orderCount=0
				}else{
					this.goodsList[index].orderCount--
				}
				const res=await addNum(this.token,id,num-1);
				console.log(res)
				const curAll=await totalNum(this.token)
				let cartNum = curAll.sum;  //通过后台接口获取
				 if (cartNum != 0) {
				   //设置角标
				   uni.setTabBarBadge({
					 index: 3,  //tabBar序号，从0开始计数
					 text: cartNum.toString()
				   })
				 } else {
				   //移除角标
				   uni.removeTabBarBadge({
					 index: 3,
				   })
				 }
			},
			goDetail(id,count){
				getApp().globalData.index = 2
				uni.navigateTo({
					url:'/pages/seckill/seckdeil?id='+id+'&count='+count
				})
			},
			goSearch(){
				uni.navigateTo({
					url:'../searchs/searchs'
				})
			},
			async  getNum(){
				  const curAll=await totalNum(this.token);
				  let cartNum = curAll.sum;  //通过后台接口获取
				   if (cartNum != 0&&cartNum!=null) {
					 //设置角标
					 uni.setTabBarBadge({
					   index: 3,  //tabBar序号，从0开始计数
					   text: cartNum.toString()
					 })
				   } else {
					 //移除角标
					 uni.removeTabBarBadge({
					   index: 3,
					 })
				   }
			},
			async  more() { //触底分页
				if(this.goodsList.length==this.totalRow){
					this.nomore=true
					console.log('到底了')
					return
				}
				console.log('触底了')
				this.pageIndex++
				if(this.select==0){
					this.categoryName='保健品'
				}else if(this.select==1){
					this.categoryName='药品'
				}else if(this.select==2){
					this.categoryName='设备'
				}
				const res=await listByType(this.token,this.categoryName,this.pageIndex,this.pageSize);
				console.log(res)
				this.totalRow=res.data.totalRow
				this.goodsList=[...this.goodsList,...res.data.list];
			  }
		}
	}
</script>

<style lang="scss">
page{
	height: 100%;
	background-color: #FFFFFF;
	.classification{
		.search{
			width: 100%;
			background-color: #fff;
			padding:20rpx 30rpx;
			
			.searchcrux{
				width: 100%;
				height: 60rpx;
				line-height: 60rpx;
				display: flex;
				flex-direction: row;
				background:#EDEDF0;
				border-radius: 50rpx;
				position: relative;
				
				.find{
					margin-left: 20rpx;
				}
				
				.searchinp{
					width: 100%;
					height: 60rpx;
					line-height: 60rpx;
					font-size: 30upx;
					color: #666666; 
					padding-left: 20rpx;
					
				} 
			}
		}
		height: 100%;
		.main{
			display: flex;
			.left{
				width:25%;
				height: calc(100vh - 100rpx);
				background-color: #eee;
				view{
					height: 100rpx;
					line-height: 100rpx;
					font-size: 32rpx;
					text-align: center;
				}
				.active{
					// color: var(--button);
					color: #008CFF;
					background-color: #FFFFFF;
					position: relative;
				}
				.shu{
					position: absolute;
					width: 8rpx;
					height: 80rpx;
					top:50%;
					left: 0;
					transform: translateY(-50%);
					// background-color: var(--button);
					background-color: #008CFF;
				}
			}
			.rightList{
				width: 75%;
				height: calc(100vh - 100rpx);
			}
		    .list{
				.right{
					padding: 20rpx;
					display: flex;
					border-bottom: 1px solid #f0f0f0;
					.photo{
						width: 200rpx;
						height: 200rpx;
						image{
							width: 100%;
							height: 100%;
						}
					}
					.detail{
						width: 60%;
						padding-left: 20rpx;
					}
					.button{
								   display: flex;
								   justify-content: flex-end;
								 
					.change{
								    display: flex;
									width:100rpx;
									height: 50rpx;
									justify-content: center;
									line-height: 50rpx;
									background-color: #E7FFE6;
									position: relative;
									margin-right: 20rpx;
									image{
										width: 100%;
										height: 100%;
									}
								   .add{
									   top:0;
									   left: -20rpx;
									   position: absolute;
									   width: 50rpx;
									   height: 50rpx;
								   }
								   .sub{
									   top:0;
									   right: -20rpx;
									   width: 50rpx;
									   height: 50rpx;
									   position: absolute;
								   }
					}
					}
				}
			}
			
		}
		
	}
    
	
}
</style>
