<template>
	<view class="pageWidth ">
		<view class="bar">
			<view :class="index==curIndex?'barBlockStyle':'barBlock'" v-for="(item,index) in titleList" :key="index" @tap="selectState(index,item)">
				{{item}}
			</view>
		</view>
		<view class="noOrderItem" v-if="orderList.length==0">
			<image class="noOrderImg" src="../../../static/orderImg/whole.png" mode="widthFix"></image>
			<view class="noOrderText">暂无相关订单</view>
			<button class="buttonColor">去首页逛逛</button>
		</view> 
		<view class="card" v-else v-for="(item,index) in orderList " :key="index" @click="goDetail(item)">
			 <view class="top">
				<view class="">
					<text v-if="item.orderStatus=='退款'" style="font-size: 32rpx;margin-right: 20rpx;">{{item.orderSubstate}}</text>
					<text v-else style="font-size: 32rpx;margin-right: 20rpx;">{{item.orderStatus}}</text>
					<text style="color:#aaa;">{{item.createTime}}</text>
				</view>
			 	<text class="cuIcon-right"></text>
			 </view>
			 <view class="num" v-for="(good,index) in item.list" :key="index">
				<view class="photo">
					<view class="wrap">
						<image :src="good.goodsSmallImage"></image>
					</view>
					<text style="margin-left: 20rpx;">{{good.goodsName}}</text>
				</view>
			 	<text>x{{good.orderCount}}</text>
			 </view>
			 <view class="" style="text-align: right;">
			 	共{{item.totalCount}}件, 实付<text style="font-size: 32rpx;color: #F86500;">¥{{item.orderPrice}}</text>
			 </view>
			 <view class="choose">
			 	<view class="lbtn" @click.stop="goDelete(item.id)" v-show="false">
			 		删除订单
			 	</view>
				<view class="rbtn" @click.stop="goOrder(item)">
					再来一单
				</view>
			 </view>
		</view>
	</view>
</template>

<script>
	import {
		mapState,
		mapGetters,
		mapMutations,
		mapActions
	} from 'vuex';
	import {
		list,deleteOrder
	} from '../../../API/olderArr/index.js';
	export default {
		data() {
			return {
				titleList: ['全部','待支付','待处理','处理中','待评价'],
				current: '',
				orderList:[],
				totalNum:0,
				curIndex:-1,
			}
		},
		computed: {
			...mapState(['token']),
		},
		onLoad(options) {
			console.log(options)
			this.current=options.state
			this.curIndex=options.index
		},
		onShow() {
			// this.showOrderList()
		},
		methods: {
			selectState(index,item){
				uni.pageScrollTo({
					scrollTop:0
				})
				this.curIndex=index
				this.current=item
				this.showOrderList()
			},
			async showOrderList(){
				uni.showLoading({
					title:'加载中'
				})
				if(this.current=='全部'){
					this.current=''
					}
				const res=await list(this.token,this.current)
				console.log(res)
				if(res){
					this.orderList=res.data
					uni.hideLoading()
				}
			},
			goDetail(item){
			   if(item.orderStatus=='退款'){
				   uni.navigateTo({
				   	url:'../../refund/detail?id='+item.id
				   })
			   }else{
				  uni.navigateTo({
				  	url:'../../orderDetail/orderDetail?id='+item.id+'&state='+item.orderStatus
				  }) 
			   }
		    },
			async  goDelete(id){
				console.log(123)
				const res=await deleteOrder(this.token,id)
				console.log(res)
				this.showOrderList()
		    },
			async goOrder(item){
				uni.navigateTo({
					url:'../../settle/settle?orderItem='+JSON.stringify(item)
				})
			}
		}
	}
</script>

<style lang="scss">
	.noOrderItem {
		position: absolute;
		top:50%;
		width: 100%;
		transform: translateY(-50%);
		text-align: center;
		.noOrderImg {
			width: 300rpx;
		}
		.noOrderText {
			font-size: 25rpx;
			color: #aaa;
			//letter-spacing: 10rpx;
		}
		.buttonColor{
			height: 60rpx;
			width: 190rpx;
			line-height: 60rpx;
			font-size: 13px;
			text-align: center;
			background-color: #008CFF;
			border-radius: 30rpx;
			color: #fff;
			margin-top: 20rpx;
		}
	}
	.bar {
		width: 100%;
		height: 100rpx;
		margin: 0 0 20rpx ;
		display: flex;
		justify-content: space-between;
		padding: 0 66rpx;
		background-color: #FFFFFF;
		position: sticky;
		top: 0;
		z-index: 9999;
		.barBlockStyle {
			font-size: 28rpx;
			// font-weight: 600;
			color:  #008CFF;
			line-height: 100rpx;
			text-align: center;
		}
		
		.barBlock {
			font-size: 28rpx;
			// font-weight: 600;
			color: #101010;
			line-height: 100rpx;
			text-align: center;
		}
	}
	
	.card{
		width: 100%;
		margin-bottom: 20rpx;
		padding: 20rpx 40rpx;
		background-color: #fff;
		.top{
			display: flex;
			justify-content: space-between;
		}
		.num{
			display: flex;
			justify-content: space-between;
			align-items: center;
			margin-bottom: 20rpx;
			.photo{
				display: flex;
				align-items: center;
				.wrap{
					width: 200rpx;
					height: 200rpx;
					image{
						width: 100%;
						height: 100%;
					}
				}
			}
		}
		.choose{
			display: flex;
			justify-content: flex-end;
			margin-top: 20rpx;
			.lbtn{
				width: 200rpx;
				line-height: 60rpx;
				height: 60rpx;
				text-align: center;
				border: 1px solid #eee;
				color: #aaa;
				margin-right: 20rpx;
			}
			.rbtn{
				width: 200rpx;
				line-height: 60rpx;
				height: 60rpx;
				text-align: center;
				color:var(--button);
				border: 1px solid var(--button);
			}
		}
	}
	
</style>
